---
export interface Props {
	href: string;
	text: string;
	rel?: string;
	target?: string;
	type?: string;
	important?: boolean;
}

const {
	href,
	text,
	rel = "",
	target = "",
	type = "",
	important = false,
} = Astro.props;
const opensNewWindow = target === "_blank";
const linkProps = Object.fromEntries(
	Object.entries({ href, rel, target, type }).filter(([_, v]) => v !== ""),
);
---

<a
	{...linkProps}
	class="relative inline-block w-full border border-black bg-transparent px-8 py-4 shadow-[#fff_4px_4px_0_0,#000_4px_4px_0_1px] transition-shadow hover:shadow-[#fff_0_0_0_0,#000_0_0_0_0]"
>
	{
		important && (
			<span class="absolute -left-1.5 -top-1.5 flex h-3 w-3">
				<span class="absolute inline-flex h-full w-full rounded-full bg-black opacity-75 motion-safe:animate-ping" />
				<span class="relative inline-flex h-3 w-3 rounded-full bg-black" />
			</span>
		)
	}
	{text}
	{opensNewWindow && <span class="sr-only">&nbsp;Abre una nueva ventana</span>}
	<svg
		xmlns="http://www.w3.org/2000/svg"
		fill="none"
		viewBox="0 0 24 24"
		stroke-width="1.5"
		stroke="currentColor"
		class="inline h-8 w-8"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			d="M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3"></path>
	</svg>
</a>
